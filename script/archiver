#!/usr/bin/env ruby
# frozen_string_literal: true

# A simple way to save a file to an S3 bucket. This script assumes that AWS_ACCESS_KEY_ID and
# AWS_SECRET_ACCESS_KEY are environment variables in the current session. It will upload the file
# with the same name that it has locally. The script will fail to upload if a file of that name
# already exists in the specified bucket.

require_relative '../lib/battlestation/s3_uploader'
require 'aws-sdk-s3'

if ARGV.count != 3
  STDERR.puts "Usage: archiver bucket_name region source_path\n"
  exit 1
end

bucket_name = ARGV[0]
region = ARGV[1]
source_path = ARGV[2]

begin
  source = File.new(source_path, 'r')
rescue => e
  STDERR.puts "#{e.message}\n"
  exit 1
end

uploader = Battlestation::S3Uploader.new()

result = uploader.upload(source,
  credentials: Aws::Credentials.new(ENV['AWS_ACCESS_KEY_ID'], ENV['AWS_SECRET_ACCESS_KEY']),
  region: region,
  bucket_name: bucket_name,
)

if result
  STDOUT.puts 'Success'
  exit 0
else
  STDOUT.puts 'Failure'
  exit 1
end
