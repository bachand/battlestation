#! /usr/bin/env zsh

#######################################
# Figures out the directory of the file in which it is invoked.
# Credit goes to http://www.ostricher.com/2014/10/the-right-way-to-get-the-directory-of-a-bash-script/
# Adapted to Z shell with the help of https://stackoverflow.com/questions/9901210/bash-source0-equivalent-in-zsh
#######################################
get_script_dir() {
  local source="${(%):-%x}"
  # While $source is a symlink, resolve it
  while [[ -h "$source" ]]; do
    local dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$( readlink "$source" )"
    # If $source was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
    [[ $source != /* ]] && source="$dir/$source"
  done
  dir="$( cd -P "$( dirname "$source" )" && pwd )"
  echo "$dir"
}

readonly PARENT_DIR="$(get_script_dir)"
readonly REPO_ROOT="$PARENT_DIR/../.."

source "$PARENT_DIR/../../lib/functions.zsh"

# Homebrew
path+="/usr/local/sbin"
# Python
path+="$HOME/Library/Python/3.6/bin"
# https://github.com/bachand/battlestation
path+="$REPO_ROOT/bin:$REPO_ROOT/script"
# VS Code
path+="/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
# https://github.com/apple/swift
path+="/Applications/CMake.app/Contents/bin"

# Keep only the first occurence of each duplicated value.
typeset -U PATH path

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
