#!/bin/bash
# This file is only sourced in interactive shells.

unset HISTFILESIZE

export GREP_OPTIONS='--color=auto'
export VISUAL=sublime
export EDITOR="$VISUAL"
export HISTSIZE=10000
# ignore commands that lead with a space, ignore dups
export HISTCONTROL=ignoreboth,ignoredups
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM='auto'
export GIT_PS1_SHOWCOLORHINTS=1
export PROMPT_COMMAND='__git_ps1 "boss:\w" "\\\$ "'
export FZF_DEFAULT_OPTS="--height 40% --reverse --border"
export FZF_CTRL_T_OPTS="--preview 'cat {} | head -100' --preview-window right"

readonly CONFIG_WORK="$HOME/Box/dotfiles/airbnb"
readonly CONFIG_HOME="$HOME/Dropbox/mbp-retina/dotfiles/home"

[[ -r ~/.fzf.bash ]] && source ~/.fzf.bash

source '/usr/local/etc/bash_completion.d/git-completion.bash'
source '/usr/local/etc/bash_completion.d/git-prompt.sh'
source "$PARENT_DIR/aliases.bash"

if [[ -f "$CONFIG_WORK" ]]; then
  source "$CONFIG_WORK"
elif [[ -f "$CONFIG_HOME" ]]; then
  source "$CONFIG_HOME"
else
  echo "$(tput setaf 1)Can't find a home or work config file$(tput sgr 0)"
fi

#######################################
# Executes the specified command. Alerts the user when the command completes.
# Arguments:
#   Command to execute
# Returns:
#   None
#######################################
notify() {
  local title="Succeeded"
  # Capture the parameter list for later display.
  local message=$@

  if [[ $# -eq 0 ]]; then
    return
  fi

  # Execute the parameters.
  eval $@

  # Get the exit status of the last-run command.
  local retVal=$?
  if [[ $retVal -ne 0 ]]; then
    title="Failed"
  fi

  # Notify the user that the command is done.
  terminal-notifier -title "$title" -message "$message" -sound "default" -ignoreDnD
}
