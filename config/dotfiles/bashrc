#!/bin/bash
# This file is only sourced in interactive shells.

#######################################
# Figures out the directory of the file in which it is invoked.
# Credit goes to http://www.ostricher.com/2014/10/the-right-way-to-get-the-directory-of-a-bash-script/
#######################################
get_script_dir() {
  local source="${BASH_SOURCE[0]}"
  # While $source is a symlink, resolve it
  while [[ -h "$source" ]]; do
    local dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$( readlink "$source" )"
    # If $source was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
    [[ $source != /* ]] && source="$dir/$source"
  done
  dir="$( cd -P "$( dirname "$source" )" && pwd )"
  echo "$dir"
}

readonly PARENT_DIR="$(get_script_dir)"

source "$PARENT_DIR/../../lib/functions.bash"

export PATH="$PATH:$PARENT_DIR/bin:$PARENT_DIR/script"
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

unset HISTFILESIZE

export GREP_OPTIONS='--color=auto'
export VISUAL=sublime
export EDITOR="$VISUAL"
export HISTSIZE=10000
# ignore commands that lead with a space, ignore dups
export HISTCONTROL=ignoreboth,ignoredups
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM='auto'
export GIT_PS1_SHOWCOLORHINTS=1
export PROMPT_COMMAND='__git_ps1 "boss:\w" "\\\$ "'
export FZF_DEFAULT_OPTS="--height 40% --reverse --border"
export FZF_CTRL_T_OPTS="--preview 'cat {} | head -100' --preview-window right"

readonly CONFIG_WORK="$HOME/Box/Personal/dotfiles/airbnb"
readonly CONFIG_HOME="$HOME/Dropbox/mbp-retina/dotfiles/home"

[[ -r ~/.fzf.bash ]] && source ~/.fzf.bash

source '/usr/local/etc/bash_completion.d/git-completion.bash'
source '/usr/local/etc/bash_completion.d/git-prompt.sh'

alias g='git'

alias ls='ls -alG'
alias sn='code'
REPOS="$HOME/repos"
alias cdr="cd $REPOS"

# Apple says that anything requiring a developer to delete `DerivedData` is a serious bug in Xcode.
alias rmdd="echo I\'m sorry `id -un`, I\'m afraid I can\'t do that"

if [[ -f "$CONFIG_WORK" ]]; then
  source "$CONFIG_WORK"
elif [[ -f "$CONFIG_HOME" ]]; then
  source "$CONFIG_HOME"
else
  echo "$(tput setaf 1)Can't find a home or work config file$(tput sgr 0)"
fi
